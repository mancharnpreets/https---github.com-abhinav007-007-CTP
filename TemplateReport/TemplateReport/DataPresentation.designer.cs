#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TemplateReport
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Tridion_Broker_NA_Reg_TCB")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPUBLICATION(PUBLICATION instance);
    partial void UpdatePUBLICATION(PUBLICATION instance);
    partial void DeletePUBLICATION(PUBLICATION instance);
    partial void InsertPAGE(PAGE instance);
    partial void UpdatePAGE(PAGE instance);
    partial void DeletePAGE(PAGE instance);
    partial void InsertPAGE_CONTENT(PAGE_CONTENT instance);
    partial void UpdatePAGE_CONTENT(PAGE_CONTENT instance);
    partial void DeletePAGE_CONTENT(PAGE_CONTENT instance);
    #endregion
		
		public DataClassesDataContext() :
        base(global::TemplateReport.Properties.Settings.Default.ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PUBLICATION> PUBLICATIONs
		{
			get
			{
				return this.GetTable<PUBLICATION>();
			}
		}
		
		public System.Data.Linq.Table<PAGE> PAGEs
		{
			get
			{
				return this.GetTable<PAGE>();
			}
		}
		
		public System.Data.Linq.Table<PAGE_CONTENT> PAGE_CONTENTs
		{
			get
			{
				return this.GetTable<PAGE_CONTENT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUBLICATIONS")]
	public partial class PUBLICATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PUBLICATION_ID;
		
		private string _PUBLICATION_TITLE;
		
		private string _PUBLICATION_KEY;
		
		private string _PUBLICATION_PATH;
		
		private string _PUBLICATION_URL;
		
		private string _MULTIMEDIA_PATH;
		
		private string _MULTIMEDIA_URL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPUBLICATION_IDChanging(int value);
    partial void OnPUBLICATION_IDChanged();
    partial void OnPUBLICATION_TITLEChanging(string value);
    partial void OnPUBLICATION_TITLEChanged();
    partial void OnPUBLICATION_KEYChanging(string value);
    partial void OnPUBLICATION_KEYChanged();
    partial void OnPUBLICATION_PATHChanging(string value);
    partial void OnPUBLICATION_PATHChanged();
    partial void OnPUBLICATION_URLChanging(string value);
    partial void OnPUBLICATION_URLChanged();
    partial void OnMULTIMEDIA_PATHChanging(string value);
    partial void OnMULTIMEDIA_PATHChanged();
    partial void OnMULTIMEDIA_URLChanging(string value);
    partial void OnMULTIMEDIA_URLChanged();
    #endregion
		
		public PUBLICATION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICATION_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PUBLICATION_ID
		{
			get
			{
				return this._PUBLICATION_ID;
			}
			set
			{
				if ((this._PUBLICATION_ID != value))
				{
					this.OnPUBLICATION_IDChanging(value);
					this.SendPropertyChanging();
					this._PUBLICATION_ID = value;
					this.SendPropertyChanged("PUBLICATION_ID");
					this.OnPUBLICATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICATION_TITLE", DbType="NVarChar(255)")]
		public string PUBLICATION_TITLE
		{
			get
			{
				return this._PUBLICATION_TITLE;
			}
			set
			{
				if ((this._PUBLICATION_TITLE != value))
				{
					this.OnPUBLICATION_TITLEChanging(value);
					this.SendPropertyChanging();
					this._PUBLICATION_TITLE = value;
					this.SendPropertyChanged("PUBLICATION_TITLE");
					this.OnPUBLICATION_TITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICATION_KEY", DbType="NVarChar(255)")]
		public string PUBLICATION_KEY
		{
			get
			{
				return this._PUBLICATION_KEY;
			}
			set
			{
				if ((this._PUBLICATION_KEY != value))
				{
					this.OnPUBLICATION_KEYChanging(value);
					this.SendPropertyChanging();
					this._PUBLICATION_KEY = value;
					this.SendPropertyChanged("PUBLICATION_KEY");
					this.OnPUBLICATION_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICATION_PATH", DbType="NVarChar(255)")]
		public string PUBLICATION_PATH
		{
			get
			{
				return this._PUBLICATION_PATH;
			}
			set
			{
				if ((this._PUBLICATION_PATH != value))
				{
					this.OnPUBLICATION_PATHChanging(value);
					this.SendPropertyChanging();
					this._PUBLICATION_PATH = value;
					this.SendPropertyChanged("PUBLICATION_PATH");
					this.OnPUBLICATION_PATHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICATION_URL", DbType="NVarChar(255)")]
		public string PUBLICATION_URL
		{
			get
			{
				return this._PUBLICATION_URL;
			}
			set
			{
				if ((this._PUBLICATION_URL != value))
				{
					this.OnPUBLICATION_URLChanging(value);
					this.SendPropertyChanging();
					this._PUBLICATION_URL = value;
					this.SendPropertyChanged("PUBLICATION_URL");
					this.OnPUBLICATION_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MULTIMEDIA_PATH", DbType="NVarChar(255)")]
		public string MULTIMEDIA_PATH
		{
			get
			{
				return this._MULTIMEDIA_PATH;
			}
			set
			{
				if ((this._MULTIMEDIA_PATH != value))
				{
					this.OnMULTIMEDIA_PATHChanging(value);
					this.SendPropertyChanging();
					this._MULTIMEDIA_PATH = value;
					this.SendPropertyChanged("MULTIMEDIA_PATH");
					this.OnMULTIMEDIA_PATHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MULTIMEDIA_URL", DbType="NVarChar(255)")]
		public string MULTIMEDIA_URL
		{
			get
			{
				return this._MULTIMEDIA_URL;
			}
			set
			{
				if ((this._MULTIMEDIA_URL != value))
				{
					this.OnMULTIMEDIA_URLChanging(value);
					this.SendPropertyChanging();
					this._MULTIMEDIA_URL = value;
					this.SendPropertyChanged("MULTIMEDIA_URL");
					this.OnMULTIMEDIA_URLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAGE")]
	public partial class PAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ITEM_REFERENCE_ID;
		
		private int _PUBLICATION_ID;
		
		private string _FILENAME;
		
		private string _URL;
		
		private int _TEMPLATE_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnITEM_REFERENCE_IDChanging(int value);
    partial void OnITEM_REFERENCE_IDChanged();
    partial void OnPUBLICATION_IDChanging(int value);
    partial void OnPUBLICATION_IDChanged();
    partial void OnFILENAMEChanging(string value);
    partial void OnFILENAMEChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnTEMPLATE_IDChanging(int value);
    partial void OnTEMPLATE_IDChanged();
    #endregion
		
		public PAGE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITEM_REFERENCE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ITEM_REFERENCE_ID
		{
			get
			{
				return this._ITEM_REFERENCE_ID;
			}
			set
			{
				if ((this._ITEM_REFERENCE_ID != value))
				{
					this.OnITEM_REFERENCE_IDChanging(value);
					this.SendPropertyChanging();
					this._ITEM_REFERENCE_ID = value;
					this.SendPropertyChanged("ITEM_REFERENCE_ID");
					this.OnITEM_REFERENCE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICATION_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PUBLICATION_ID
		{
			get
			{
				return this._PUBLICATION_ID;
			}
			set
			{
				if ((this._PUBLICATION_ID != value))
				{
					this.OnPUBLICATION_IDChanging(value);
					this.SendPropertyChanging();
					this._PUBLICATION_ID = value;
					this.SendPropertyChanged("PUBLICATION_ID");
					this.OnPUBLICATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FILENAME", DbType="NVarChar(255)")]
		public string FILENAME
		{
			get
			{
				return this._FILENAME;
			}
			set
			{
				if ((this._FILENAME != value))
				{
					this.OnFILENAMEChanging(value);
					this.SendPropertyChanging();
					this._FILENAME = value;
					this.SendPropertyChanged("FILENAME");
					this.OnFILENAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMPLATE_ID", DbType="Int NOT NULL")]
		public int TEMPLATE_ID
		{
			get
			{
				return this._TEMPLATE_ID;
			}
			set
			{
				if ((this._TEMPLATE_ID != value))
				{
					this.OnTEMPLATE_IDChanging(value);
					this.SendPropertyChanging();
					this._TEMPLATE_ID = value;
					this.SendPropertyChanged("TEMPLATE_ID");
					this.OnTEMPLATE_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAGE_CONTENT")]
	public partial class PAGE_CONTENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PUBLICATION_ID;
		
		private int _PAGE_ID;
		
		private string _CONTENT;
		
		private string _CHARSET;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPUBLICATION_IDChanging(int value);
    partial void OnPUBLICATION_IDChanged();
    partial void OnPAGE_IDChanging(int value);
    partial void OnPAGE_IDChanged();
    partial void OnCONTENTChanging(string value);
    partial void OnCONTENTChanged();
    partial void OnCHARSETChanging(string value);
    partial void OnCHARSETChanged();
    #endregion
		
		public PAGE_CONTENT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLICATION_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PUBLICATION_ID
		{
			get
			{
				return this._PUBLICATION_ID;
			}
			set
			{
				if ((this._PUBLICATION_ID != value))
				{
					this.OnPUBLICATION_IDChanging(value);
					this.SendPropertyChanging();
					this._PUBLICATION_ID = value;
					this.SendPropertyChanged("PUBLICATION_ID");
					this.OnPUBLICATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAGE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PAGE_ID
		{
			get
			{
				return this._PAGE_ID;
			}
			set
			{
				if ((this._PAGE_ID != value))
				{
					this.OnPAGE_IDChanging(value);
					this.SendPropertyChanging();
					this._PAGE_ID = value;
					this.SendPropertyChanged("PAGE_ID");
					this.OnPAGE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTENT", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CONTENT
		{
			get
			{
				return this._CONTENT;
			}
			set
			{
				if ((this._CONTENT != value))
				{
					this.OnCONTENTChanging(value);
					this.SendPropertyChanging();
					this._CONTENT = value;
					this.SendPropertyChanged("CONTENT");
					this.OnCONTENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHARSET", DbType="NVarChar(40)")]
		public string CHARSET
		{
			get
			{
				return this._CHARSET;
			}
			set
			{
				if ((this._CHARSET != value))
				{
					this.OnCHARSETChanging(value);
					this.SendPropertyChanging();
					this._CHARSET = value;
					this.SendPropertyChanged("CHARSET");
					this.OnCHARSETChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
